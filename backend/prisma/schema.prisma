// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql" // เปลี่ยนเป็น DB ที่ใช้จริง
  url      = env("DATABASE_URL")
}

model User {
  UserId      Int      @id @default(autoincrement())
  UserName    String   @unique
  UserPassword String
  RoleId      Int
  BranchId    Int
  TelNumber   String?
  Email       String?
  LineId      String?
  CreatedAt   DateTime @default(now())
  CreatedBy   Int?
  UpdatedAt   DateTime @updatedAt
  UpdatedBy   Int?

  Role        Role     @relation(fields: [RoleId], references: [RoleId])
  Branch      Branch   @relation(fields: [BranchId], references: [BranchId])
}

model Branch {
  BranchId      Int      @id @default(autoincrement())
  BranchName    String
  BranchAddress String?
  BranchCode    String   @unique
  CreatedAt     DateTime @default(now())
  CreatedBy     Int?
  UpdatedAt     DateTime @updatedAt
  UpdatedBy     Int?

  CreatedByUser User? @relation("BranchCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser User? @relation("BranchUpdatedBy", fields: [UpdatedBy], references: [UserId])

  Users                User[]
  WithdrawnRequests    WithdrawnRequest[]
  Issues               Issue[]
}

model PurchaseOrderDetail {
  PurchaseOrderDetailId Int      @id @default(autoincrement())
  PurchaseOrderId       Int
  MaterialId            Int
  PurchaseOrderQuantity Int
  PurchaseOrderPrice    Float
  PurchaseOrderUnit     String
  CreatedAt             DateTime @default(now())
  CreatedBy             Int?
  UpdatedAt             DateTime @updatedAt
  UpdatedBy             Int?

  CreatedByUser         User? @relation("PurchaseOrderDetailCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser         User? @relation("PurchaseOrderDetailUpdatedBy", fields: [UpdatedBy], references: [UserId])

  PurchaseOrder         PurchaseOrder @relation(fields: [PurchaseOrderId], references: [PurchaseOrderId])
  Material              Material      @relation(fields: [MaterialId], references: [MaterialId])

  ReceiptDetails        ReceiptDetail[]

  @@unique([PurchaseOrderId, MaterialId])
}

model Role {
  RoleId    Int    @id @default(autoincrement())
  RoleName  String
  RoleCode  String @unique

  Users     User[]
}

model Supplier {
  SupplierId         Int    @id @default(autoincrement())
  SupplierName       String
  SupplierAddress    String?
  SupplierCode       String @unique
  SupplierTelNumber  String?
  CreatedAt          DateTime @default(now())
  CreatedBy          Int?
  UpdatedAt          DateTime @updatedAt
  UpdatedBy          Int?

  CreatedByUser      User? @relation("SupplierCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser      User? @relation("SupplierUpdatedBy", fields: [UpdatedBy], references: [UserId])

  PurchaseOrders     PurchaseOrder[]
}

model Material {
  MaterialId     Int     @id @default(autoincrement())
  MaterialName   String
  Unit           String
  Price          Float
  CatagoryId     Int
  MaterialCode   String  @unique
  CreatedAt      DateTime @default(now())
  CreatedBy      Int?
  UpdatedAt      DateTime @updatedAt
  UpdatedBy      Int?

  CreatedByUser  User? @relation("MaterialCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser  User? @relation("MaterialUpdatedBy", fields: [UpdatedBy], references: [UserId])

  Catagory       Catagory @relation(fields: [CatagoryId], references: [CatagoryId])
  Stocks         Stock[]
  PurchaseOrderDetails PurchaseOrderDetail[]
  ReceiptDetails ReceiptDetail[]
  WithdrawnRequestDetails WithdrawnRequestDetail[]
  IssueDetails   IssueDetail[]
}

model PurchaseOrder {
  PurchaseOrderId        Int     @id @default(autoincrement())
  DateTime              DateTime
  TotalPrice            Float
  SupplierId            Int
  PurchaseOrderCode     String  @unique
  PurchaseOrderStatus   String
  PurchaseOrderAddress  String?
  ContactName           String?
  ContactPhoneNumber    String?
  CreatedAt             DateTime @default(now())
  CreatedBy             Int?
  UpdatedAt             DateTime @updatedAt
  UpdatedBy             Int?

  CreatedByUser         User? @relation("PurchaseOrderCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser         User? @relation("PurchaseOrderUpdatedBy", fields: [UpdatedBy], references: [UserId])

  Supplier              Supplier @relation(fields: [SupplierId], references: [SupplierId])
  PurchaseOrderDetails  PurchaseOrderDetail[]
  Receipts              Receipt[]
  Stocks                Stock[]
}

model Catagory {
  CatagoryId     Int     @id @default(autoincrement())
  CatagoryName   String
  CatagoryCode   String  @unique
  CreatedAt      DateTime @default(now())
  CreatedBy      Int?
  UpdatedAt      DateTime @updatedAt
  UpdatedBy      Int?

  CreatedByUser  User? @relation("CatagoryCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser  User? @relation("CatagoryUpdatedBy", fields: [UpdatedBy], references: [UserId])

  Materials      Material[]
}

model Stock {
  StockId         Int     @id @default(autoincrement())
  MaterialId      Int
  Quantity        Int
  Barcode         String  @unique
  StockPrice      Float
  ReceiptId       Int?
  PurchaseOrderId Int?
  Issue           Int?
  Remain          Int?
  CreatedAt       DateTime @default(now())
  CreatedBy       Int?
  UpdatedAt       DateTime @updatedAt
  UpdatedBy       Int?

  CreatedByUser   User? @relation("StockCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser   User? @relation("StockUpdatedBy", fields: [UpdatedBy], references: [UserId])

  Material        Material @relation(fields: [MaterialId], references: [MaterialId])
  Receipt         Receipt? @relation(fields: [ReceiptId], references: [ReceiptId])
  PurchaseOrder   PurchaseOrder? @relation(fields: [PurchaseOrderId], references: [PurchaseOrderId])
}

model Receipt {
  ReceiptId          Int     @id @default(autoincrement())
  ReceiptDateTime    DateTime
  ReceiptTotalPrice  Float
  PurchaseOrderId    Int
  ReceiptCode        String  @unique
  CreatedAt          DateTime @default(now())
  CreatedBy          Int?
  UpdatedAt          DateTime @updatedAt
  UpdatedBy          Int?

  CreatedByUser      User? @relation("ReceiptCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser      User? @relation("ReceiptUpdatedBy", fields: [UpdatedBy], references: [UserId])

  PurchaseOrder      PurchaseOrder @relation(fields: [PurchaseOrderId], references: [PurchaseOrderId])
  ReceiptDetails     ReceiptDetail[]
  Stocks             Stock[]
}

model WithdrawnRequest {
  RequestId                 Int     @id @default(autoincrement())
  RequestDate               DateTime
  WithdrawnRequestStatus    String
  BranchId                  Int
  WithdrawnRequestCode      String  @unique
  CreatedAt                 DateTime @default(now())
  CreatedBy                 Int?
  UpdatedAt                 DateTime @updatedAt
  UpdatedBy                 Int?

  CreatedByUser             User? @relation("WithdrawnRequestCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser             User? @relation("WithdrawnRequestUpdatedBy", fields: [UpdatedBy], references: [UserId])

  Branch                    Branch   @relation(fields: [BranchId], references: [BranchId])
  WithdrawnRequestDetails   WithdrawnRequestDetail[]
  Issues                    Issue[]
}

model ReceiptDetail {
  ReceiptDetailId        Int     @id @default(autoincrement())
  ReceiptId              Int
  PurchaseOrderDetailId  Int
  MaterialId             Int
  MaterialQuantity       Int
  CreatedAt              DateTime @default(now())
  CreatedBy              Int?
  UpdatedAt              DateTime @updatedAt
  UpdatedBy              Int?

  CreatedByUser          User? @relation("ReceiptDetailCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser          User? @relation("ReceiptDetailUpdatedBy", fields: [UpdatedBy], references: [UserId])

  Receipt                Receipt   @relation(fields: [ReceiptId], references: [ReceiptId])
  PurchaseOrderDetail    PurchaseOrderDetail @relation(fields: [PurchaseOrderDetailId], references: [PurchaseOrderDetailId])
  Material               Material  @relation(fields: [MaterialId], references: [MaterialId])

  @@unique([ReceiptId, MaterialId])
}

model WithdrawnRequestDetail {
  WithdrawnRequestDetailId Int     @id @default(autoincrement())
  RequestId               Int
  MaterialId              Int
  WithdrawnQuantity       Int
  CreatedAt               DateTime @default(now())
  CreatedBy               Int?
  UpdatedAt               DateTime @updatedAt
  UpdatedBy               Int?

  CreatedByUser           User? @relation("WithdrawnRequestDetailCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser           User? @relation("WithdrawnRequestDetailUpdatedBy", fields: [UpdatedBy], references: [UserId])

  WithdrawnRequest        WithdrawnRequest @relation(fields: [RequestId], references: [RequestId])
  Material                Material         @relation(fields: [MaterialId], references: [MaterialId])

  @@unique([RequestId, MaterialId])
}

model Issue {
  IssueId      Int     @id @default(autoincrement())
  RequestId    Int    @unique
  BranchId     Int
  IssueStatus  String
  IssueDate    DateTime
  CreatedAt    DateTime @default(now())
  CreatedBy    Int?
  UpdatedAt    DateTime @updatedAt
  UpdatedBy    Int?

  CreatedByUser User? @relation("IssueCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser User? @relation("IssueUpdatedBy", fields: [UpdatedBy], references: [UserId])

  WithdrawnRequest WithdrawnRequest @relation(fields: [RequestId], references: [RequestId])
  Branch           Branch           @relation(fields: [BranchId], references: [BranchId])
  IssueDetails     IssueDetail[]
}

model IssueDetail {
  IssueDetailId   Int      @id @default(autoincrement())
  RequestId       Int
  MaterialId      Int
  Barcode         String
  IssueQuantity   Int
  IssueId         Int
  CreatedAt       DateTime @default(now())
  CreatedBy       Int?
  UpdatedAt       DateTime @updatedAt
  UpdatedBy       Int?

  CreatedByUser   User?    @relation("IssueDetailCreatedBy", fields: [CreatedBy], references: [UserId])
  UpdatedByUser   User?    @relation("IssueDetailUpdatedBy", fields: [UpdatedBy], references: [UserId])

  Issue           Issue    @relation(fields: [IssueId], references: [IssueId])
  Material        Material @relation(fields: [MaterialId], references: [MaterialId])

  // ✅ Unique เฉพาะเมื่อสามค่านี้ซ้ำกันพร้อมกันเท่านั้น
  @@unique([IssueId, MaterialId, Barcode])
}